import React, {useEffect, useState} from "react";
import {ThemeContext} from "@contexts/ThemeContext";

/**
 * Author: Carlos Duarte
 * Contexto responsável por armazenar e fornecer o tema atual do sistema.
 *
 * @function ThemeProvider
 * @param {ReactNode} children Elemento JSX que será renderizado dentro do contexto.
 * @returns {ReactElement} Elemento JSX que representa o contexto.
 *
 * @example
 * import { ThemeProvider } from '@contexts/ThemeProvider';
 *
 * const App = () => (
 *   <ThemeProvider>
 *     <BaseLayout>
 *       <Home />
 *     </BaseLayout>
 *   </ThemeProvider>
 * );
 */
const ThemeProvider = ({children}) => {
    const [theme, setTheme] = useState('light');

    useEffect(() => {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'light' || savedTheme === 'dark') {
            setTheme(savedTheme);
        }
    }, []);

    useEffect(() => {
        localStorage.setItem('theme', theme);
    }, [theme]);

    const toggleTheme = () => {
        setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));
    };

    return (
        <ThemeContext.Provider value={{theme, toggleTheme}}>
            {children}
        </ThemeContext.Provider>
    );
};

export default ThemeProvider;